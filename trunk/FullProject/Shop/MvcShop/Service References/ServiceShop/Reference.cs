//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcShop.ServiceShop {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceShop.IServiceShop")]
    public interface IServiceShop {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateRecept", ReplyAction="http://tempuri.org/IServiceShop/CreateReceptResponse")]
        bool CreateRecept(ShopModel.Entities.Recept recept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateRecept", ReplyAction="http://tempuri.org/IServiceShop/UpdateReceptResponse")]
        bool UpdateRecept(ShopModel.Entities.Recept recept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteRecept", ReplyAction="http://tempuri.org/IServiceShop/DeleteReceptResponse")]
        bool DeleteRecept(ShopModel.Entities.Recept recept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadReceptInCategory", ReplyAction="http://tempuri.org/IServiceShop/LoadReceptInCategoryResponse")]
        ShopModel.Entities.ReceptInCategory LoadReceptInCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadReceptInCategoryByCategory", ReplyAction="http://tempuri.org/IServiceShop/LoadReceptInCategoryByCategoryResponse")]
        ShopModel.Entities.ReceptInCategory[] LoadReceptInCategoryByCategory(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateReceptInCategory", ReplyAction="http://tempuri.org/IServiceShop/CreateReceptInCategoryResponse")]
        bool CreateReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateReceptInCategory", ReplyAction="http://tempuri.org/IServiceShop/UpdateReceptInCategoryResponse")]
        bool UpdateReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteReceptInCategory", ReplyAction="http://tempuri.org/IServiceShop/DeleteReceptInCategoryResponse")]
        bool DeleteReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadOrder", ReplyAction="http://tempuri.org/IServiceShop/LoadOrderResponse")]
        ShopModel.Entities.Order LoadOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadOrderByStatus", ReplyAction="http://tempuri.org/IServiceShop/LoadOrderByStatusResponse")]
        ShopModel.Entities.Order[] LoadOrderByStatus(ShopModel.Entities.OrderStatus orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadOrderByUserName", ReplyAction="http://tempuri.org/IServiceShop/LoadOrderByUserNameResponse")]
        ShopModel.Entities.Order[] LoadOrderByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllOrder", ReplyAction="http://tempuri.org/IServiceShop/LoadAllOrderResponse")]
        ShopModel.Entities.Order[] LoadAllOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateOrder", ReplyAction="http://tempuri.org/IServiceShop/CreateOrderResponse")]
        int CreateOrder(ShopModel.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateOrder", ReplyAction="http://tempuri.org/IServiceShop/UpdateOrderResponse")]
        bool UpdateOrder(ShopModel.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteOrder", ReplyAction="http://tempuri.org/IServiceShop/DeleteOrderResponse")]
        bool DeleteOrder(ShopModel.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/SetShop", ReplyAction="http://tempuri.org/IServiceShop/SetShopResponse")]
        void SetShop(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadCategory", ReplyAction="http://tempuri.org/IServiceShop/LoadCategoryResponse")]
        ShopModel.Entities.Category LoadCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllCategory", ReplyAction="http://tempuri.org/IServiceShop/LoadAllCategoryResponse")]
        ShopModel.Entities.Category[] LoadAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateCategory", ReplyAction="http://tempuri.org/IServiceShop/CreateCategoryResponse")]
        bool CreateCategory(ShopModel.Entities.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateCategory", ReplyAction="http://tempuri.org/IServiceShop/UpdateCategoryResponse")]
        bool UpdateCategory(ShopModel.Entities.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteCategory", ReplyAction="http://tempuri.org/IServiceShop/DeleteCategoryResponse")]
        bool DeleteCategory(ShopModel.Entities.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadIngridient", ReplyAction="http://tempuri.org/IServiceShop/LoadIngridientResponse")]
        ShopModel.Entities.Ingridient LoadIngridient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllIngridients", ReplyAction="http://tempuri.org/IServiceShop/LoadAllIngridientsResponse")]
        ShopModel.Entities.Ingridient[] LoadAllIngridients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateIngridient", ReplyAction="http://tempuri.org/IServiceShop/CreateIngridientResponse")]
        bool CreateIngridient(ShopModel.Entities.Ingridient ingridient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateIngridient", ReplyAction="http://tempuri.org/IServiceShop/UpdateIngridientResponse")]
        bool UpdateIngridient(ShopModel.Entities.Ingridient ingridient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteIngridient", ReplyAction="http://tempuri.org/IServiceShop/DeleteIngridientResponse")]
        bool DeleteIngridient(ShopModel.Entities.Ingridient ingridient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadIngridientInReceptById", ReplyAction="http://tempuri.org/IServiceShop/LoadIngridientInReceptByIdResponse")]
        ShopModel.Entities.IngridientInRecept LoadIngridientInReceptById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadIngridientInRecept", ReplyAction="http://tempuri.org/IServiceShop/LoadIngridientInReceptResponse")]
        ShopModel.Entities.IngridientInRecept LoadIngridientInRecept(int idRecept, int idIngridient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllIngridientsInRecept", ReplyAction="http://tempuri.org/IServiceShop/LoadAllIngridientsInReceptResponse")]
        ShopModel.Entities.IngridientInRecept[] LoadAllIngridientsInRecept(int idRecept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateIngridientInRecept", ReplyAction="http://tempuri.org/IServiceShop/CreateIngridientInReceptResponse")]
        bool CreateIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateIngridientInRecept", ReplyAction="http://tempuri.org/IServiceShop/UpdateIngridientInReceptResponse")]
        bool UpdateIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteIngridientInRecept", ReplyAction="http://tempuri.org/IServiceShop/DeleteIngridientInReceptResponse")]
        bool DeleteIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadItemInSklad", ReplyAction="http://tempuri.org/IServiceShop/LoadItemInSkladResponse")]
        ShopModel.Entities.ItemInSklad LoadItemInSklad(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllItemInSklad", ReplyAction="http://tempuri.org/IServiceShop/LoadAllItemInSkladResponse")]
        ShopModel.Entities.ItemInSklad[] LoadAllItemInSklad();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/CreateItemInSklad", ReplyAction="http://tempuri.org/IServiceShop/CreateItemInSkladResponse")]
        bool CreateItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/UpdateItemInSklad", ReplyAction="http://tempuri.org/IServiceShop/UpdateItemInSkladResponse")]
        bool UpdateItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/DeleteItemInSklad", ReplyAction="http://tempuri.org/IServiceShop/DeleteItemInSkladResponse")]
        bool DeleteItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadRecept", ReplyAction="http://tempuri.org/IServiceShop/LoadReceptResponse")]
        ShopModel.Entities.Recept LoadRecept(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadReceptByCategory", ReplyAction="http://tempuri.org/IServiceShop/LoadReceptByCategoryResponse")]
        ShopModel.Entities.Recept[] LoadReceptByCategory(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceShop/LoadAllRecept", ReplyAction="http://tempuri.org/IServiceShop/LoadAllReceptResponse")]
        ShopModel.Entities.Recept[] LoadAllRecept();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceShopChannel : MvcShop.ServiceShop.IServiceShop, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceShopClient : System.ServiceModel.ClientBase<MvcShop.ServiceShop.IServiceShop>, MvcShop.ServiceShop.IServiceShop {
        
        public ServiceShopClient() {
        }
        
        public ServiceShopClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceShopClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceShopClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceShopClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateRecept(ShopModel.Entities.Recept recept) {
            return base.Channel.CreateRecept(recept);
        }
        
        public bool UpdateRecept(ShopModel.Entities.Recept recept) {
            return base.Channel.UpdateRecept(recept);
        }
        
        public bool DeleteRecept(ShopModel.Entities.Recept recept) {
            return base.Channel.DeleteRecept(recept);
        }
        
        public ShopModel.Entities.ReceptInCategory LoadReceptInCategory(int id) {
            return base.Channel.LoadReceptInCategory(id);
        }
        
        public ShopModel.Entities.ReceptInCategory[] LoadReceptInCategoryByCategory(int idCategory) {
            return base.Channel.LoadReceptInCategoryByCategory(idCategory);
        }
        
        public bool CreateReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory) {
            return base.Channel.CreateReceptInCategory(receptInCategory);
        }
        
        public bool UpdateReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory) {
            return base.Channel.UpdateReceptInCategory(receptInCategory);
        }
        
        public bool DeleteReceptInCategory(ShopModel.Entities.ReceptInCategory receptInCategory) {
            return base.Channel.DeleteReceptInCategory(receptInCategory);
        }
        
        public ShopModel.Entities.Order LoadOrder(int id) {
            return base.Channel.LoadOrder(id);
        }
        
        public ShopModel.Entities.Order[] LoadOrderByStatus(ShopModel.Entities.OrderStatus orderStatus) {
            return base.Channel.LoadOrderByStatus(orderStatus);
        }
        
        public ShopModel.Entities.Order[] LoadOrderByUserName(string userName) {
            return base.Channel.LoadOrderByUserName(userName);
        }
        
        public ShopModel.Entities.Order[] LoadAllOrder() {
            return base.Channel.LoadAllOrder();
        }
        
        public int CreateOrder(ShopModel.Entities.Order order) {
            return base.Channel.CreateOrder(order);
        }
        
        public bool UpdateOrder(ShopModel.Entities.Order order) {
            return base.Channel.UpdateOrder(order);
        }
        
        public bool DeleteOrder(ShopModel.Entities.Order order) {
            return base.Channel.DeleteOrder(order);
        }
        
        public void SetShop(string name) {
            base.Channel.SetShop(name);
        }
        
        public ShopModel.Entities.Category LoadCategory(int id) {
            return base.Channel.LoadCategory(id);
        }
        
        public ShopModel.Entities.Category[] LoadAllCategory() {
            return base.Channel.LoadAllCategory();
        }
        
        public bool CreateCategory(ShopModel.Entities.Category category) {
            return base.Channel.CreateCategory(category);
        }
        
        public bool UpdateCategory(ShopModel.Entities.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public bool DeleteCategory(ShopModel.Entities.Category category) {
            return base.Channel.DeleteCategory(category);
        }
        
        public ShopModel.Entities.Ingridient LoadIngridient(int id) {
            return base.Channel.LoadIngridient(id);
        }
        
        public ShopModel.Entities.Ingridient[] LoadAllIngridients() {
            return base.Channel.LoadAllIngridients();
        }
        
        public bool CreateIngridient(ShopModel.Entities.Ingridient ingridient) {
            return base.Channel.CreateIngridient(ingridient);
        }
        
        public bool UpdateIngridient(ShopModel.Entities.Ingridient ingridient) {
            return base.Channel.UpdateIngridient(ingridient);
        }
        
        public bool DeleteIngridient(ShopModel.Entities.Ingridient ingridient) {
            return base.Channel.DeleteIngridient(ingridient);
        }
        
        public ShopModel.Entities.IngridientInRecept LoadIngridientInReceptById(int id) {
            return base.Channel.LoadIngridientInReceptById(id);
        }
        
        public ShopModel.Entities.IngridientInRecept LoadIngridientInRecept(int idRecept, int idIngridient) {
            return base.Channel.LoadIngridientInRecept(idRecept, idIngridient);
        }
        
        public ShopModel.Entities.IngridientInRecept[] LoadAllIngridientsInRecept(int idRecept) {
            return base.Channel.LoadAllIngridientsInRecept(idRecept);
        }
        
        public bool CreateIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept) {
            return base.Channel.CreateIngridientInRecept(ingridientInRecept);
        }
        
        public bool UpdateIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept) {
            return base.Channel.UpdateIngridientInRecept(ingridientInRecept);
        }
        
        public bool DeleteIngridientInRecept(ShopModel.Entities.IngridientInRecept ingridientInRecept) {
            return base.Channel.DeleteIngridientInRecept(ingridientInRecept);
        }
        
        public ShopModel.Entities.ItemInSklad LoadItemInSklad(int id) {
            return base.Channel.LoadItemInSklad(id);
        }
        
        public ShopModel.Entities.ItemInSklad[] LoadAllItemInSklad() {
            return base.Channel.LoadAllItemInSklad();
        }
        
        public bool CreateItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad) {
            return base.Channel.CreateItemInSklad(itemInSklad);
        }
        
        public bool UpdateItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad) {
            return base.Channel.UpdateItemInSklad(itemInSklad);
        }
        
        public bool DeleteItemInSklad(ShopModel.Entities.ItemInSklad itemInSklad) {
            return base.Channel.DeleteItemInSklad(itemInSklad);
        }
        
        public ShopModel.Entities.Recept LoadRecept(int id) {
            return base.Channel.LoadRecept(id);
        }
        
        public ShopModel.Entities.Recept[] LoadReceptByCategory(int idCategory) {
            return base.Channel.LoadReceptByCategory(idCategory);
        }
        
        public ShopModel.Entities.Recept[] LoadAllRecept() {
            return base.Channel.LoadAllRecept();
        }
    }
}
