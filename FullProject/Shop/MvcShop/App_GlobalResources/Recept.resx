<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="d10" xml:space="preserve">
    <value>Pizza sauce, Mozzarella, Parmesan cheese, ham, tomatoes, mushrooms and fresh herbs</value>
  </data>
  <data name="d11" xml:space="preserve">
    <value>Pizza sauce, cheese "Emental", "Cheder", "Dor Blue"and "Parmesan"</value>
  </data>
  <data name="d12" xml:space="preserve">
    <value>Pizza Quatro-stadzhioni "leave no one indifferent. A variety of ingredients to satisfy customers with different tastes. 1 / 4 pizza "Monica ", 1 / 4 pizza "Francesca", 1 / 4 pizza "Adriano" and 1 / 4 - onions, olives, tomatoes and mushrooms</value>
  </data>
  <data name="d13" xml:space="preserve">
    <value>descr10</value>
  </data>
  <data name="d14" xml:space="preserve">
    <value>descr11</value>
  </data>
  <data name="d15" xml:space="preserve">
    <value>descr12</value>
  </data>
  <data name="d16" xml:space="preserve">
    <value>Coca-Cola is a carbonated soft drink sold in the stores</value>
  </data>
  <data name="d17" xml:space="preserve">
    <value>BonAqua - this is an example of crystal purity and a unique freshness. Is a highly</value>
  </data>
  <data name="d18" xml:space="preserve">
    <value>Sprite is a transparent, lemon-lime flavored, caffeine free soft drink</value>
  </data>
  <data name="d19" xml:space="preserve">
    <value>Coca-Cola is a carbonated soft drink sold in the stores</value>
  </data>
  <data name="d20" xml:space="preserve">
    <value>BonAqua - this is an example of crystal purity and a unique freshness. Is a highly</value>
  </data>
  <data name="d21" xml:space="preserve">
    <value>Sprite is a transparent, lemon-lime flavored, caffeine free soft drink</value>
  </data>
  <data name="d22" xml:space="preserve">
    <value>Refuel kiwi mousse, whipped cream, sprinkled with walnuts. Comes with a sticker with caramel, which you can pour over salad on their own.</value>
  </data>
  <data name="d4" xml:space="preserve">
    <value>Pizza, sauce, Mozzarella, tomatoes, basil and oregano</value>
  </data>
  <data name="d5" xml:space="preserve">
    <value>Pizza, sauce, Mozzarella, mushrooms, peppers, broccoli, capers, tomatoes, olives, onions, corn and  herbs</value>
  </data>
  <data name="d6" xml:space="preserve">
    <value>Pizza sauce, Mozzarella, pineapple, ham, tomatoes and herbs</value>
  </data>
  <data name="d7" xml:space="preserve">
    <value>Pizza sauce, Mozzarella, sausage hunting double, Bulgarian pepper, jalapenos and BBQ Sauce</value>
  </data>
  <data name="d8" xml:space="preserve">
    <value>Pizza sauce, Mozzarella, chicken, pineapple, jalapeno</value>
  </data>
  <data name="d9" xml:space="preserve">
    <value>Pizza sauce, Mozzarella, ham, salami, tomatoes, mushrooms</value>
  </data>
  <data name="r10" xml:space="preserve">
    <value>Daniela</value>
  </data>
  <data name="r11" xml:space="preserve">
    <value>Kvatro formaji</value>
  </data>
  <data name="r12" xml:space="preserve">
    <value>Kvatro strajioni</value>
  </data>
  <data name="r13" xml:space="preserve">
    <value>recept10</value>
  </data>
  <data name="r14" xml:space="preserve">
    <value>recept11</value>
  </data>
  <data name="r15" xml:space="preserve">
    <value>recept12</value>
  </data>
  <data name="r16" xml:space="preserve">
    <value>Coca-cola</value>
  </data>
  <data name="r17" xml:space="preserve">
    <value>Bonaqua</value>
  </data>
  <data name="r18" xml:space="preserve">
    <value>Sprite</value>
  </data>
  <data name="r19" xml:space="preserve">
    <value>Coca-cola</value>
  </data>
  <data name="r20" xml:space="preserve">
    <value>Bonaqua</value>
  </data>
  <data name="r21" xml:space="preserve">
    <value>Sprite</value>
  </data>
  <data name="r22" xml:space="preserve">
    <value>Fruit Fantasy</value>
  </data>
  <data name="r4" xml:space="preserve">
    <value>Margarita</value>
  </data>
  <data name="r5" xml:space="preserve">
    <value>Breakfast Laura</value>
  </data>
  <data name="r6" xml:space="preserve">
    <value>Monica</value>
  </data>
  <data name="r7" xml:space="preserve">
    <value>Sergio</value>
  </data>
  <data name="r8" xml:space="preserve">
    <value>Domenika</value>
  </data>
  <data name="r9" xml:space="preserve">
    <value>Francheska</value>
  </data>
</root>